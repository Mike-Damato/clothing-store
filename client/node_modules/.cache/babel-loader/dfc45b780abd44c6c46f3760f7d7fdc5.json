{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, signInSuccess, signInFailure, CHECK_USER_SESSION, signOutSuccess, signOutFailure, SIGN_OUT_START, SIGN_UP_START, signUpSuccess, signUpFailure, SIGN_IN_SUCCESS } from './user-reducer';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield signInFailure(error);\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_IN_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/mike/Desktop/Coding/React2020/clothing-store/src/redux/user/user-saga.js"],"names":["takeLatest","put","all","call","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","signInSuccess","signInFailure","CHECK_USER_SESSION","signOutSuccess","signOutFailure","SIGN_OUT_START","SIGN_UP_START","signUpSuccess","signUpFailure","SIGN_IN_SUCCESS","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","message","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOutStart","onSignUpStart","onSignUpSuccess","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport {\n  GOOGLE_SIGN_IN_START,\n  EMAIL_SIGN_IN_START,\n  signInSuccess,\n  signInFailure,\n  CHECK_USER_SESSION,\n  signOutSuccess,\n  signOutFailure,\n  SIGN_OUT_START,\n  SIGN_UP_START,\n  signUpSuccess,\n  signUpFailure,\n  SIGN_IN_SUCCESS,\n} from './user-reducer';\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield signInFailure(error);\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error.message));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) {\n      return;\n    }\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_IN_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}