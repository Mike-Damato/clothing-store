{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { SET_CURRENT_USER, GOOGLE_SIGN_IN_START, GOOGLE_SIGN_IN_SUCCESS, GOOGLE_SIGN_IN_FAILURE, EMAIL_SIGN_IN_START, EMAIL_SIGN_IN_SUCCESS, EMAIL_SIGN_IN_FAILURE, googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user-reducer';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onGEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/mike/Desktop/Coding/React2020/clothing-store/src/redux/user/user-saga.js"],"names":["takeLatest","put","all","call","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","GOOGLE_SIGN_IN_SUCCESS","GOOGLE_SIGN_IN_FAILURE","EMAIL_SIGN_IN_START","EMAIL_SIGN_IN_SUCCESS","EMAIL_SIGN_IN_FAILURE","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","onGEmailSignInStart","userSagas","onEmailSignInStart"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SACEC,gBADF,EAEEC,oBAFF,EAGEC,sBAHF,EAIEC,sBAJF,EAKEC,mBALF,EAMEC,qBANF,EAOEC,qBAPF,EAQEC,mBARF,EASEC,mBATF,EAUEC,kBAVF,EAWEC,kBAXF,QAYO,gBAZP;AAaA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMlB,IAAI,CAACc,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMtB,GAAG,CACPU,mBAAmB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMzB,GAAG,CAACW,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMlB,IAAI,CAACc,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMtB,GAAG,CACPY,kBAAkB,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADX,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdzB,IAAAA,GAAG,CAACa,kBAAkB,CAACY,KAAD,CAAnB,CAAH;AACD;AACF;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAMhC,UAAU,CAACK,oBAAD,EAAuBa,gBAAvB,CAAhB;AACD;AAED,OAAO,UAAUe,mBAAV,GAAgC;AACrC,QAAMjC,UAAU,CAACQ,mBAAD,EAAsBmB,eAAtB,CAAhB;AACD;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAMhC,GAAG,CAAC,CAACC,IAAI,CAAC6B,mBAAD,CAAL,EAA4B7B,IAAI,CAACgC,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport {\n  SET_CURRENT_USER,\n  GOOGLE_SIGN_IN_START,\n  GOOGLE_SIGN_IN_SUCCESS,\n  GOOGLE_SIGN_IN_FAILURE,\n  EMAIL_SIGN_IN_START,\n  EMAIL_SIGN_IN_SUCCESS,\n  EMAIL_SIGN_IN_FAILURE,\n  googleSignInSuccess,\n  googleSignInFailure,\n  emailSignInSuccess,\n  emailSignInFailure,\n} from './user-reducer';\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (error) {\n    put(emailSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onGEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}