{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from './shop-reducer';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Fired the async saga');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // dispatch(fetchCollectionsStart());\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/mike/Desktop/Coding/React2020/clothing-store/src/redux/shop/shop-saga.js"],"names":["takeEvery","call","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SACEC,uBADF,EAEEC,yBAFF,EAGEC,yBAHF,QAIO,gBAJP;AAKA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BK,+BAD+B,EAE/BM,QAF+B,CAAjC;AAID,GAPD,CAOE,OAAOG,KAAP,EAAc,CAAE,CAVqB,CAWvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CAACE,uBAAD,EAA0BK,qBAA1B,CAAf;AACD","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\nimport {\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE,\n} from './shop-reducer';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('Fired the async saga');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n  } catch (error) {}\n  // dispatch(fetchCollectionsStart());\n\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}